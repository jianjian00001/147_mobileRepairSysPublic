<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置关于维修订单表的 MyBatis映射文件 -->
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.dao.OrdersDAO">
	<resultMap type="com.entity.Orders" id="ordersMap">
		<id property="ordersid" column="ordersid" />
		<result property="ordercode" column="ordercode" />
		<result property="usersid" column="usersid" />
		<result property="brandid" column="brandid" />
		<result property="phoneid" column="phoneid" />
		<result property="iszaibao" column="iszaibao" />
		<result property="total" column="total" />
		<result property="addtime" column="addtime" />
		<result property="status" column="status" />
		<result property="adminid" column="adminid" />
		<result property="memo" column="memo" />
		<result property="username" column="username" />
		<result property="brandname" column="brandname" />
		<result property="phonename" column="phonename" />
		<result property="realname" column="realname" />
		<!-- 通过外键关联查询 返回封装Users对象 -->
		<association property="users" column="usersid" select="com.dao.UsersDAO.getUsersById" javaType="com.entity.Users" />
		<!-- 通过外键关联查询 返回封装Brand对象 -->
		<association property="brand" column="brandid" select="com.dao.BrandDAO.getBrandById" javaType="com.entity.Brand" />
		<!-- 通过外键关联查询 返回封装Phone对象 -->
		<association property="phone" column="phoneid" select="com.dao.PhoneDAO.getPhoneById" javaType="com.entity.Phone" />
		<!-- 通过外键关联查询 返回封装Admin对象 -->
		<association property="admin" column="adminid" select="com.dao.AdminDAO.getAdminById" javaType="com.entity.Admin" />
	</resultMap>

	<!-- 维修订单表 插入SQL语句 OrdersDAO通过ID(insertOrders)调用此配置 -->
	<insert id="insertOrders" parameterType="orders">
		insert into orders(ordersid , ordercode , usersid , brandid , phoneid , iszaibao , total , addtime , status ,
		adminid , memo ) values(#{ordersid} , #{ordercode} ,
		#{usersid} , #{brandid} , #{phoneid} , #{iszaibao} , #{total} , #{addtime} , #{status} , #{adminid} ,
		#{memo} )
	</insert>

	<!-- 维修订单表 更新SQL语句 OrdersDAO通过ID(updateOrders)调用此配置 -->
	<update id="updateOrders" parameterType="orders">
		update orders set ordercode=#{ordercode} , usersid=#{usersid} , brandid=#{brandid} , phoneid=#{phoneid} ,
		iszaibao=#{iszaibao} , total=#{total} , addtime=#{addtime} , status=#{status} , adminid=#{adminid} , memo=#{memo} where ordersid=#{ordersid}
	</update>

	<!-- 维修订单表 按主键删除SQL语句 OrdersDAO通过ID(deleteOrders)调用此配置 -->
	<delete id="deleteOrders" parameterType="String">
		delete from orders where ordersid = #{ordersid}
	</delete>

	<!-- 维修订单表 查询全部维修订单信息SQL语句 OrdersDAO通过ID(getAllOrders)调用此配置 -->
	<select id="getAllOrders" resultMap="ordersMap">
		select a.* , b.username , c.brandname , d.phonename , e.realname from orders a LEFT JOIN users b on a.usersid =
		b.usersid LEFT JOIN brand c on a.brandid =
		c.brandid LEFT JOIN phone d on a.phoneid = d.phoneid LEFT JOIN admin e on a.adminid = e.adminid order by ordersid
		desc
	</select>

	<!-- 维修订单表 按主键(ordersid)查询SQL语句 OrdersDAO通过ID(getOrdersById)调用此配置 -->
	<select id="getOrdersById" parameterType="String" resultMap="ordersMap">
		select a.* , b.username , c.brandname , d.phonename , e.realname from orders a LEFT JOIN
		users b on a.usersid = b.usersid LEFT JOIN brand c on a.brandid =
		c.brandid LEFT JOIN phone d on a.phoneid = d.phoneid LEFT JOIN admin e on a.adminid =
		e.adminid where ordersid=#{ordersid}
	</select>

	<!-- 维修订单表 按条件精确查询SQL语句 OrdersDAO通过ID(getOrdersByCond)调用此配置 -->
	<select id="getOrdersByCond" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username , c.brandname , d.phonename , e.realname from orders a LEFT JOIN users b on a.usersid = b.usersid LEFT JOIN brand c on a.brandid =
		c.brandid LEFT JOIN phone d on a.phoneid = d.phoneid LEFT JOIN admin e on a.adminid = e.adminid where 1=1
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode = #{ordercode}
		</if>
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}
		</if>
		<if test="brandid != null and '' != brandid">
			and a.brandid = #{brandid}
		</if>
		<if test="phoneid != null and '' != phoneid">
			and a.phoneid = #{phoneid}
		</if>
		<if test="iszaibao != null and '' != iszaibao">
			and a.iszaibao = #{iszaibao}
		</if>
		<if test="total != null and '' != total">
			and a.total = #{total}
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}
		</if>
		<if test="status != null and '' != status">
			and a.status = #{status}
		</if>
		<if test="adminid != null and '' != adminid">
			and a.adminid = #{adminid}
		</if>
		<if test="memo != null and '' != memo">
			and a.memo = #{memo}
		</if>
	</select>

	<!-- 维修订单表 按条件模糊查询SQL语句 OrdersDAO通过ID(getOrdersByLike)调用此配置 -->
	<select id="getOrdersByLike" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username , c.brandname , d.phonename , e.realname from orders a LEFT JOIN users b on a.usersid = b.usersid LEFT JOIN brand c on a.brandid =
		c.brandid LEFT JOIN phone d on a.phoneid = d.phoneid LEFT JOIN admin e on a.adminid = e.adminid where 1=1
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode like CONCAT('%', CONCAT(#{ordercode}, '%'))
		</if>
		<if test="usersid != null and '' != usersid">
			and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="brandid != null and '' != brandid">
			and c.brandname like CONCAT('%', CONCAT(#{brandid}, '%'))
		</if>
		<if test="phoneid != null and '' != phoneid">
			and d.phonename like CONCAT('%', CONCAT(#{phoneid}, '%'))
		</if>
		<if test="iszaibao != null and '' != iszaibao">
			and a.iszaibao like CONCAT('%', CONCAT(#{iszaibao}, '%'))
		</if>
		<if test="total != null and '' != total">
			and a.total like CONCAT('%', CONCAT(#{total}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="status != null and '' != status">
			and a.status like CONCAT('%', CONCAT(#{status}, '%'))
		</if>
		<if test="adminid != null and '' != adminid">
			and e.realname like CONCAT('%', CONCAT(#{adminid}, '%'))
		</if>
		<if test="memo != null and '' != memo">
			and a.memo like CONCAT('%', CONCAT(#{memo}, '%'))
		</if>
	</select>
</mapper>





























